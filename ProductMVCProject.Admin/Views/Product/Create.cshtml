@model ProductMVCProject.Data.Model.Product

@{
	ViewBag.Title = "Yeni Ürün Oluştur";

}

	<h2>Yeni Ürün Oluştur</h2>

@using (Html.BeginForm("Create","Product",null,FormMethod.Post,new { enctype="multipart/form-data" }))
{
	@Html.AntiForgeryToken() @*post metot için gerekli*@
<div class="form-horizontal">
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	<div class="form-group">
		@Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">

			@Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
		</div>

	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })

		</div>
	</div>
	<!--imagethumbnail-->
	<div class="form-group">
		<div class="row">
			<div id="preview" class="col-md-8"></div>
		</div>
	</div>
	<div class="form-group">


		@Html.Label("Resim", htmlAttributes: new { @class = "control-label col-md-2" })


		<div class="col-md-10">

			<input type="file" name="productImage" accept="image/*" multiple id="productImage" />

		</div>
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Kaydet" class="btn btn-default" />
			</div>
		</div>

	</div>
</div>

}
<div>
	@Html.ActionLink("Listeye Dön","Index")
</div>
@section scripts{
	@Scripts.Render("~/bundles/jqueryval")} 

@*File Upload için thumnail resmi gösterme scripti*@
<script>
	const inputElement = document.getElementById("productImage");
	inputElement.addEventListener("change", getFiles, false);
	function getFiles() {
		const fileList = this.files; /* now you can work with the file list */
		handleFiles(fileList);
	}

	function handleFiles(files) {
		console.log(files);
  for (let i = 0; i < files.length; i++) {
    const file = files[i];
    
    if (!file.type.startsWith('image/')){ continue }
    
    const img = document.createElement("img");
    img.classList.add("obj");
		img.file = file;
		img.width = 100;
		img.height = 100;
    preview.appendChild(img); // Assuming that "preview" is the div output where the content will be displayed.
    
    const reader = new FileReader();
    reader.onload = (function(aImg) { return function(e) { aImg.src = e.target.result; }; })(img);
    reader.readAsDataURL(file);
  }
}
</script>